--- Gamification API v1 ---
---
Welcome to our Gamification API documentation.

Your application id is passed as an http header.
---

-- Users Resources --

List of your gamified application users.
GET /users
< 200
< Content-Type: application/xml
<users>
 <user>
  <id>1</id>
  <name>Doe</name>
  <nickname>john.doe</nickname>
  <surname>John</surname>
 </user>
 <user>
  <id>2</id>
  <name>Stark</name>
  <nickname>tony.stark</nickname>
  <surname>Tony</surname>
 </user>
</users>

Save a new application user by passing his representation.
POST /users
> Accept: application/json
{ "name": "doe", "surname": "john", "nickname": "john.doe", "password": "john.doe$6" }
< 201
< Location: /users/3

Get an application user through his id.
GET /users/{id}
< 200
< Content-Type: application/xml
<user>
 <id>1</id>
 <name>Doe</name>
 <nickname>john.doe</nickname>
 <surname>John</surname>
</user>

Update an application user through is id and a new representation.
PUT /users/{id}
> Accept: application/json
{ "name": "Doe", "surname": "John", "nickname": "john.doe", "password": "john.doe$6" }
< 200

TODO (to improve) Get success aquired by an application user.
GET /users/{id}/success
< 200
< Content-Type: application/json
{ "success": [
    { "id": 1, "name": "get 1000 points", "badge": "badges/cool.png" }
    { "id": 2, "name": "lost 1000 points", "badge": "badges/bad.png" }
] }

Get events preformed by an application user. They are ordered from newest to oldest.
GET /users/{id}/events
< 200
< Content-Type: application/xml
<events>
 <event>
  <description>Delete a comment from a thread</description>
  <id>2</id>
  <points>-100</points>
  <timestamp>2348327219</timestamp>
  <user>John Doe (john.doe)</user>
 </event>
 <event>
  <description>Add a comment to a thread</description>
  <id>1</id>
  <points>100</points>
  <timestamp>1458923839</timestamp>
  <user>John Doe (john.doe)</user>
 </event>
</events>


-- Event Resources --
Get all the events that occured in the application. They are ordered form newest to oldest.
GET /events
< 200
< Content-Type: application/xml
<events>
 <event>
  <description>Add a comment to a thread</description>
  <id>3</id>
  <points>100</points>
  <timestamp>3243121234</timestamp>
  <user>Tony Stark (tony.stark)</user>
 </event>
 <event>
  <description>Delete a comment from a thread</description>
  <id>2</id>
  <points>-100</points>
  <timestamp>2348327219</timestamp>
  <user>John Doe (john.doe)</user>
 </event>
 <event>
  <description>Add a comment to a thread</description>
  <id>1</id>
  <points>100</points>
  <timestamp>1458923839</timestamp>
  <user>John Doe (john.doe)</user>
 </event>
</events>

Save a new event (an action has been performed by an user) in your application.
POST /events
> Accept: application/json
{ "userId": 2, "actionTypeId": 1, "timestamp": 2348327219 }
< 201
< Location: /events/3

Get the informations of one particular event through his id.
GET /events/{id}
< 200
< Content-Type: application/xml
<event>
 <description>Delete a comment from a thread</description>
 <id>2</id>
 <points>-100</points>
 <timestamp>2348327219</timestamp>
 <user>John Doe (john.doe)</user>
</event>

-- LeaderBoard Resources --

Get the Leaderboard of your application. The Leaderboard contains all users of your application ordered (ranked) by the total value of their acquired points.
GET /leaderboard
< 200
< Content-Type: application/xml
<rankedusers>
 <rankeduser>
  <id>2</id>
  <name>Stark</name>
  <nickname>tony.stark</nickname>
  <points>100</points>
  <surname>Tony</surname>
 </rankeduser>
 <rankeduser>
  <id>1</id>
  <name>Doe</name>
  <nickname>john.doe</nickname>
  <points>0</points>
  <surname>John</surname>
 </rankeduser>
</rankedusers>